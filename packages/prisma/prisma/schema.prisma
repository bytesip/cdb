generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// 焙煎済みの豆の意 not raw beans
model Bean {
    id                    String                  @id @default(cuid())
    name                  String
    createdAt             DateTime                @default(now()) @map("created_at")
    updatedAt             DateTime                @updatedAt @map("updated_at")
    beansOrigins          BeansOrigin[]
    beansRoastLevels      BeansRoastLevel[]
    BeansProcessingMethod BeansProcessingMethod[]
    BeansTastings         BeansTastings[]

    @@map("beans")
}

model Orign {
    id           String        @id @default(cuid())
    name         String        @unique
    description  String
    longitude    Float?
    latitude     Float?
    createdAt    DateTime      @default(now()) @map("created_at")
    updatedAt    DateTime      @updatedAt @map("updated_at")
    beansOrigins BeansOrigin[]

    @@map("origns")
}

model BeansOrigin {
    beanId    String   @map("bean_id")
    bean      Bean     @relation(fields: [beanId], references: [id])
    originId  String   @map("origin_id")
    origin    Orign    @relation(fields: [originId], references: [id])
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    @@id([beanId, originId])
    @@map("beans_origins")
}

model RoastLevel {
    id               String            @id @default(cuid())
    name             String            @unique
    description      String
    createdAt        DateTime          @default(now()) @map("created_at")
    updatedAt        DateTime          @updatedAt @map("updated_at")
    beansRoastLevels BeansRoastLevel[]

    @@map("roast_levels")
}

model BeansRoastLevel {
    beanId       String     @map("bean_id")
    bean         Bean       @relation(fields: [beanId], references: [id])
    roastLevelId String     @map("roast_level_id")
    roastLevel   RoastLevel @relation(fields: [roastLevelId], references: [id])
    createdAt    DateTime   @default(now()) @map("created_at")
    updatedAt    DateTime   @updatedAt @map("updated_at")

    @@id([beanId, roastLevelId])
    @@map("beans_roast_levels")
}

model ProcessingMethod {
    id                    String                  @id @default(cuid())
    name                  String                  @unique
    description           String
    createdAt             DateTime                @default(now()) @map("created_at")
    updatedAt             DateTime                @updatedAt @map("updated_at")
    BeansProcessingMethod BeansProcessingMethod[]

    @@map("processing_methods")
}

model BeansProcessingMethod {
    beanId             String           @map("bean_id")
    bean               Bean             @relation(fields: [beanId], references: [id])
    processingMethodId String           @map("processing_method_id")
    processingMethod   ProcessingMethod @relation(fields: [processingMethodId], references: [id])
    createdAt          DateTime         @default(now()) @map("created_at")
    updatedAt          DateTime         @updatedAt @map("updated_at")

    @@id([beanId, processingMethodId])
    @@map("beans_processing_methods")
}

// これは木構造を持つ
model FlavorProfile {
    id        String   @id @default(cuid())
    name      String   @unique
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")
    Tasting   Tasting? @relation(fields: [tastingId], references: [id])
    tastingId String?

    @@map("flavor_profiles")
}

model Tasting {
    id              String          @id @default(cuid())
    name            String          @unique
    description     String
    acidity         Int
    richness        Int
    flavorPorfileId String          @map("flavor_profile_id")
    flavorProfiles  FlavorProfile[]
    BeansTastings   BeansTastings[]
    createdAt       DateTime        @default(now()) @map("created_at")
    updatedAt       DateTime        @updatedAt @map("updated_at")

    @@map("tastings")
}

model BeansTastings {
    tastingId String   @id @map("tasting_id")
    tasting   Tasting  @relation(fields: [tastingId], references: [id])
    beanId    String   @map("bean_id")
    bean      Bean     @relation(fields: [beanId], references: [id])
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    @@map("beans_tastings")
}


// 店舗
// 購入日
// 容量と価格

// 飲み方 種類
// 飲み方毎の説明
